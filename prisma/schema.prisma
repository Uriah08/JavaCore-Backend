generator client {
  provider = "prisma-client-js"
  output   = "../src/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?   @unique
  email         String?   @unique
  password      String?
  role          String    @default("user")
  emailVerified DateTime? @map("email_verified")
  image         String?
  // otp           String?
  // otpExpires    DateTime?
  // otpCooldown   DateTime?

  // accounts              Account[]
  // sessions              Session[]
  // verifiedDevices       VerifiedDevice[]
  // RouteComponentDetails RouteComponentDetails[]
  jobs Job[]
  // RouteList             RouteList[]
  // RouteComponentImage   RouteComponentImage[]
  // RouteComponentFigures RouteComponentFigures[]
  // RouteComponentAction  RouteComponentAction[]
  // RouteComponentNote    RouteComponentNote[]

  @@map("users")
}

model Job {
  id                 String    @id @default(uuid())
  no                 Int       @unique @default(autoincrement())
  status             String    @default("Waiting for Analysis")
  userId             String    @map("user_id")
  area               String
  dateSurveyed       DateTime
  jobNumber          String    @unique
  poNumber           String?
  woNumber           String?
  reportNumber       String?
  jobDescription     String
  method             String
  inspector          String
  analyst            String?
  reviewer           String?
  dateFinished       DateTime?
  inspectionRoute    String
  equipmentUse       String
  dateRegistered     DateTime  @default(now())
  yearWeekNumber     String
  reportIntroduction String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  // ReportImages ReportImages[] 

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  // routeList RouteList @relation(fields: [inspectionRoute], references: [id], onDelete: Cascade)

  @@map("jobs")
}
